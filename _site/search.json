[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "inclass/inclass04/inclass04.html",
    "href": "inclass/inclass04/inclass04.html",
    "title": "inclass-ex-04",
    "section": "",
    "text": "pacman::p_load(tidyverse,patchwork,plotly,DT)"
  },
  {
    "objectID": "inclass/inclass04/inclass04.html#visualizing-the-uncertainty-of-point-estimates",
    "href": "inclass/inclass04/inclass04.html#visualizing-the-uncertainty-of-point-estimates",
    "title": "inclass-ex-04",
    "section": "Visualizing the uncertainty of point estimates",
    "text": "Visualizing the uncertainty of point estimates\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean =mean(MATHS),\n    sd = sd(MATHS)\n  )%>%\n  mutate(se = sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n \n  \n    RACE \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    Chinese \n    193 \n    76.50777 \n    15.69040 \n    1.132357 \n  \n  \n    Indian \n    12 \n    60.66667 \n    23.35237 \n    7.041005 \n  \n  \n    Malay \n    108 \n    57.44444 \n    21.13478 \n    2.043177 \n  \n  \n    Others \n    9 \n    69.66667 \n    10.72381 \n    3.791438"
  },
  {
    "objectID": "inclass/inclass03/inclass03.html",
    "href": "inclass/inclass03/inclass03.html",
    "title": "in-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded\nThey are ggraph and tidyverse\n\npacman::p_load(tidyverse,ggraph)\n\nimport data\n\nexam_data <- read.csv(\"data/Exam_data.csv\")\n\n\nggplot(data= exam_data,\n          aes(x = MATHS))+\n    geom_dotplot(dotsize = 0.5)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html",
    "href": "inclass/inclass05/inclass05.html",
    "title": "inclass05",
    "section": "",
    "text": "pacman::p_load(corrplot, tidyverse, ggstatsplot)\n\n\nwine <- read_csv(\"data/wine_quality.csv\")\nview(wine)\npairs(wine[,2:12])\n\n\n\n\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12],lower.panel = NULL)\n\n\n\n\n\nwine.cor <- cor(wine[, 1:11])\ncorrplot(wine.cor)\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p < 0.05\"\n)\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#installing-and-launching-r-packages",
    "href": "inclass/inclass05/inclass05.html#installing-and-launching-r-packages",
    "title": "inclass05",
    "section": "Installing and launching R packages",
    "text": "Installing and launching R packages\n\npacman::p_load(ggtern, plotly, tidyverse)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#data-preparation",
    "href": "inclass/inclass05/inclass05.html#data-preparation",
    "title": "inclass05",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nImporting Data\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\nPreparing the Data\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\n\n\nPlotting Ternary Diagram with R\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#datainstall-and-launching-r-packages",
    "href": "inclass/inclass05/inclass05.html#datainstall-and-launching-r-packages",
    "title": "inclass05",
    "section": "DataInstall and Launching R Packages",
    "text": "DataInstall and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#importing-and-preparing-the-data-set",
    "href": "inclass/inclass05/inclass05.html#importing-and-preparing-the-data-set",
    "title": "inclass05",
    "section": "Importing and Preparing The Data Set",
    "text": "Importing and Preparing The Data Set\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\n\nPreparing the data\n\nrow.names(wh) <- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\n\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#static-heatmap",
    "href": "inclass/inclass05/inclass05.html#static-heatmap",
    "title": "inclass05",
    "section": "Static Heatmap",
    "text": "Static Heatmap\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#creating-interactive-heatmap",
    "href": "inclass/inclass05/inclass05.html#creating-interactive-heatmap",
    "title": "inclass05",
    "section": "Creating Interactive Heatmap",
    "text": "Creating Interactive Heatmap\n\nview(mtcars)\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#data-trasformation",
    "href": "inclass/inclass05/inclass05.html#data-trasformation",
    "title": "inclass05",
    "section": "Data trasformation",
    "text": "Data trasformation\n\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#clustering-algorithm",
    "href": "inclass/inclass05/inclass05.html#clustering-algorithm",
    "title": "inclass05",
    "section": "Clustering algorithm",
    "text": "Clustering algorithm\n\nManual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\n\nwh_d <- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust <- hclust(wh_d, method = \"average\")\nnum_k <- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#seriation",
    "href": "inclass/inclass05/inclass05.html#seriation",
    "title": "inclass05",
    "section": "Seriation",
    "text": "Seriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")"
  },
  {
    "objectID": "inclass/inclass05/inclass05.html#working-with-colour-palettes",
    "href": "inclass/inclass05/inclass05.html#working-with-colour-palettes",
    "title": "inclass05",
    "section": "Working with colour palettes",
    "text": "Working with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "TAKEHOME/TAKEHOME01/takehome01.html",
    "href": "TAKEHOME/TAKEHOME01/takehome01.html",
    "title": "Takehome01",
    "section": "",
    "text": "](images/image-400834270.png)\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "TAKEHOME/TAKEHOME02/takehome2.html#critique",
    "href": "TAKEHOME/TAKEHOME02/takehome2.html#critique",
    "title": "Takehome02",
    "section": "Critique",
    "text": "Critique\n\nclarity\n-Title is not clear enough.from the title, users cannot tell what topic and info will be delivered.a possible title could be\nAge sex pyramid in Singapore: Top 9 most populated planning area - June 2022\n-Bins plotted too tightly.there are too many bins from the whole view, it is hard for viewers to locate and identify a apecific figure and pattern.\n-Lack of indicators. there are not any reference line to help viewers to locate any detail of the figure\n\n\nAesthetics\n-Do not have any color combination. there are only blue and red with white background which can not attract any attention\n-Too little area between axis and graph. There is currently no segreation between the graph area and the axis. try to add color and other graph to make it easier for viewers to see"
  },
  {
    "objectID": "TAKEHOME/TAKEHOME02/takehome2.html#libraries",
    "href": "TAKEHOME/TAKEHOME02/takehome2.html#libraries",
    "title": "Takehome02",
    "section": "Libraries",
    "text": "Libraries\nThe R packages we’ll use for this analysis are:\n\ntidyverse - a family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\nggplot2 - a system for declaratively creating graphics, based on The Grammar of Graphics (ggplot2 is included in the tidyverse package, i’m highlighting it here for emphasis, since it’s our main tool for visualisation)\nggthemes - The ggthemes package provides extra themes, geoms, and scales for the ggplot2 package\nggiraph - a package that provides interactive elements to ggplot like animations and tooltips (was not used after experimenting with it, leaving it here for reference)\nplotly - another package that provides interactive elements to ggplot (was not used after experimenting with it, leaving it here for reference)"
  },
  {
    "objectID": "TAKEHOME/TAKEHOME02/takehome2.html#preparing-the-data-set",
    "href": "TAKEHOME/TAKEHOME02/takehome2.html#preparing-the-data-set",
    "title": "Takehome02",
    "section": "Preparing the Data Set",
    "text": "Preparing the Data Set\n\nloading Packages\n\npacman::p_load(tidyverse, ggthemes, ggiraph, plotly)\n\n\n\nImporting and tidying the data\n\nsg <- read_csv('data/respopagesexfa2022.csv')\n\nAfter importing the original data into Rstudio, i want to check if there is any incorrect or messy\n\nstr(sg)\n\nspc_tbl_ [75,696 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ PA  : chr [1:75696] \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr [1:75696] \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ AG  : chr [1:75696] \"0_to_4\" \"0_to_4\" \"0_to_4\" \"0_to_4\" ...\n $ Sex : chr [1:75696] \"Males\" \"Males\" \"Males\" \"Males\" ...\n $ FA  : chr [1:75696] \"<= 60\" \">60 to 80\" \">80 to 100\" \">100 to 120\" ...\n $ Pop : num [1:75696] 0 10 20 60 10 0 0 0 20 50 ...\n $ Time: num [1:75696] 2022 2022 2022 2022 2022 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   PA = col_character(),\n  ..   SZ = col_character(),\n  ..   AG = col_character(),\n  ..   Sex = col_character(),\n  ..   FA = col_character(),\n  ..   Pop = col_double(),\n  ..   Time = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nWe can observe that there are more data than we really need, so i choose select function to select some columns.\n\nsgsubset <- sg %>% \n  select(PA, AG, Sex, Pop)\nnames(sgsubset) <-c('Planning_Area', 'Age_group', 'Gender', 'Population')\n\nUse level to check the order of factors\n\nlevels(factor(sgsubset$Age_group))\n\n [1] \"0_to_4\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"    \"25_to_29\"   \n [6] \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"    \"5_to_9\"     \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\"\n\n\nI notice that “5_to_9” is out of place. Use mutate() and arrange() to correct this.\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\nsgsubset <- sgsubset %>%\n  mutate(Age_group =  factor(Age_group, levels = order)) %>%\n  arrange(Age_group)\n\nlevels(sgsubset$Age_group)\n\n [1] \"0_to_4\"      \"5_to_9\"      \"10_to_14\"    \"15_to_19\"    \"20_to_24\"   \n [6] \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"    \"45_to_49\"   \n[11] \"50_to_54\"    \"55_to_59\"    \"60_to_64\"    \"65_to_69\"    \"70_to_74\"   \n[16] \"75_to_79\"    \"80_to_84\"    \"85_to_89\"    \"90_and_over\"\n\n\n\n\nPreparation for visualisation\n\nCheck_PA <- sgsubset %>%\n  group_by(`Planning_Area`) %>%\n  summarise(sum_pop = sum(Population), .groups = 'drop') %>%\n  arrange(sum_pop,.by_group = TRUE) %>%\n  top_n(9) %>%\n  ungroup()\n\nCheck_PA\n\n# A tibble: 9 × 2\n  Planning_Area sum_pop\n  <chr>           <dbl>\n1 Punggol        186250\n2 Choa Chu Kang  190460\n3 Yishun         222770\n4 Hougang        227720\n5 Woodlands      252720\n6 Sengkang       253050\n7 Jurong West    258520\n8 Tampines       265610\n9 Bedok          278870\n\n\n\nsgsubsettop9 <- sgsubset %>% filter(`Planning_Area` %in% c('Bedok', 'Tampines', 'Jurong West', 'Sengkang', 'Woodlands', 'Hougang', 'Yishun', 'Choa Chu Kang', 'Punggol'))\n\n\n\nVisualising the Age-Sex Pyramid in a Trellis Display\nDesign X and Y\n\nagesexP <- ggplot(sgsubsettop9,aes(x = `Age_group`, y = Population,fill = Gender)) + \n  geom_bar(data = subset(sgsubsettop9,Gender == 'Females'), stat = 'identity') + \n  geom_bar(data = subset(sgsubsettop9,Gender == 'Males'), stat = 'identity', mapping = aes(y = -(Population))) + \n  coord_flip() + \n  facet_wrap(~`Planning_Area`,ncol = 3)\n\ndesign\n\nagesexP +\n  ggtitle(\"Singapore Age-Sex Pyramid (Age sex pyramid in Singapore: Top 9 most populated planning area - June 2022\") + \n  theme_classic() +\n  theme(plot.title = element_text(hjust = 0.5, vjust = 3)) + \n  xlab(\"Age Group\") + \n  ylab(\"Population\")+\n  scale_fill_manual(values=c('coral','cyan'))"
  },
  {
    "objectID": "TAKEHOME/TAKEHOME02/takehome2.html#learning-points",
    "href": "TAKEHOME/TAKEHOME02/takehome2.html#learning-points",
    "title": "Takehome02",
    "section": "Learning points",
    "text": "Learning points\nTableau and Rstudio are two different mindset visualization methods.\nfirst one is more visual and convenient to create presentation ready visualisations without any coding knowledge. This makes tableau much more accessible to the general public and beginners\nOn the other hand, visualisations in ‘R’ can achieve the same if not better visualisation that Tableau with much more granular control over the various attributes and objects shown. However the difficult part is coding knowledge required.\nIn the end, which tool to be used may depended on the people and the requirement."
  },
  {
    "objectID": "TAKEHOME/TAKEHOME03/TAKEHOME03.html",
    "href": "TAKEHOME/TAKEHOME03/TAKEHOME03.html",
    "title": "takehome03",
    "section": "",
    "text": "HHHH"
  }
]